apiVersion: apps/v1
kind: Deployment
metadata:
  name: service1-deployment
  namespace: prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: service1
  template:
    metadata:
      labels:
        app: service1
    spec:
      containers:
      - name: service1-container
        image: watri/service1:latest
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 10m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: service1-service
  namespace: prod
spec:
  type: NodePort
  selector:
    app: service1
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30001

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: service1-hpa
  namespace: prod
spec:
  maxReplicas: 4
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: service1-deployment
  targetCPUUtilizationPercentage: 80
status:
  currentReplicas: 0
  desiredReplicas: 0

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: service1-ingress
  namespace: prod
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: 8m
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Client-Id,Client-Version"
spec:
  tls:
    - hosts:
        - watri.com
      secretName: sehatq-ssl-cert
  rules:
    - host: api.watri.com
      http:
        paths:
          - path: /service1
            pathType: ImplementationSpecific
            backend:
              service:
                name: service1-service
                port:
                  number: 8080